"""

Revision ID: 0006_oauth_credentials
Revises: 0005_oauth_changes
Create Date: 2025-02-19 10:06:24.723160

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0006_oauth_credentials'
down_revision: Union[str, None] = '0005_oauth_changes'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth_credentials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('provider_user_id', sa.String(), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.Column('token_type', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('scopes', sa.JSON(), nullable=False),
    sa.Column('raw_response', sa.JSON(), nullable=False),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_oauth_credentials')),
    sa.UniqueConstraint('user_id', 'provider', name='uix_user_provider')
    )
    op.create_index(op.f('ix_oauth_credentials_provider'), 'oauth_credentials', ['provider'], unique=False)
    op.create_index(op.f('ix_oauth_credentials_user_id'), 'oauth_credentials', ['user_id'], unique=False)
    op.drop_table('google_oauth_tokens')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('google_oauth_tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('access_token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('refresh_token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('token_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('scopes', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False),
    sa.Column('expiry', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_google_oauth_tokens'),
    sa.UniqueConstraint('user_id', name='uq_google_oauth_tokens_user_id')
    )
    op.drop_index(op.f('ix_oauth_credentials_user_id'), table_name='oauth_credentials')
    op.drop_index(op.f('ix_oauth_credentials_provider'), table_name='oauth_credentials')
    op.drop_table('oauth_credentials')
    # ### end Alembic commands ###
